class Solution{
    public:
    Shop shop;
    Solution(Shop s)
    {
        this->shop = s;
    }
    unordered_map<int,int> dp;
    int get_price(int i){
        if(dp.find(i)!=dp.end()) return dp[i];
        else{
           dp[i]=shop.get(i);
           return dp[i];
        }
    }
    long long find(int n, long k){
        long long choclates_enjoyed=0;
     while( k > 0){            
        int l=0;
        int r=n-1;
        long max_amount=-1;
        while(  l<=r ){
            int mid=(l + (r-l)/2);
            if( get_price(mid) <= k  ){
                max_amount=get_price(mid);
                l=mid+1;
            }
            else 
               r=mid-1;
        }
        if(max_amount==-1) return choclates_enjoyed;
        choclates_enjoyed += k / max_amount;
        // money remaining 
          k = k%max_amount;
        }       
        return choclates_enjoyed;  
    }
};
