class Solution {
public:
   int minimumCostOfBreaking(vector<int> X, vector<int> Y, int M, int N){
       //Write your code here
       sort(X.begin(), X.end(), greater<int>());
       sort(Y.begin(), Y.end(), greater<int>());
       int i = 0;
       int j = 0;
       int res = 0;
       
       //i and M and X set
       while(i<M-1 && j<N-1){
           if(X[i] > Y[j]) { res += X[i]*(j+1); i++; }
           else { res += Y[j]*(i+1); j++; }
       }
       while(i<M-1) { res += X[i]*(j+1); i++; }
       while(j<N-1) { res += Y[j]*(i+1); j++; }
       return res;
   }
};
