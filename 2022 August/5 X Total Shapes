class Solution
{
    public:
    //Function to find the number of 'X' total shapes.
    void dfs(vector<vector<char>>& g, int i,int j){
       if(i<0 || i>= g.size() || j<0 || j>=g[0].size() || g[i][j]=='O'){
           return;
       }
       
       g[i][j] = 'O';
       dfs(g,i,j-1);
       dfs(g,i,j+1);
       dfs(g,i-1,j);
       dfs(g,i+1,j);
   }
   int xShape(vector<vector<char>>& grid) 
   {
       // Code here
       int count = 0;
       for(int i=0; i<grid.size(); i++){
           for(int j=0; j<grid[0].size(); j++){
               if(grid[i][j] == 'X'){
                   count++;
                   dfs(grid,i,j);
               }
           }
       }
       return count;
   }
};
