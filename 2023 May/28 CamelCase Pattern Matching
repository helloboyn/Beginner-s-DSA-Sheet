class Solution {
  public:
 bool matchPattern(string& word, string& patternToMatch) {
        string patternInWord = "";
        
        for(char c: word) {
            if( isupper(c) )
                patternInWord.push_back(c);
                
            if(patternInWord == patternToMatch) 
                return true;
        } 
        
        return false;
    }
    
    vector<string> CamelCase(int n, vector<string> dictionary, string pattern) {
        vector<string> ans;
        
        for(string word: dictionary) {
            
            if( matchPattern(word, pattern) )
                ans.push_back(word);
                
        }
        
        // edge case
        if( ans.empty() ) 
            return {"-1"};

        sort(begin(ans), end(ans));
        
        return ans;
    }
};
